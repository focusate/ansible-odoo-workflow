---
version: '2'
services:
  odoo:
    image: "{{ docker_image_name }}"
    logging:
      driver: syslog
      options:
        tag: odoo-container
    depends_on:
      - db
    volumes:
      - odoo-filestore:/opt/odoo/data
      - type: bind
        source:
          "{{ dpl_secrets_odoo_config_file }}"
        target:
          /etc/odoo/odoo.override.conf
      - type: bind
        source: "{{ dpl_secrets_postgres_file }}"
        target: "{{ env_postgres_password_file }}"
    environment:
      POSTGRES_DB: "{{ env_postgres_db }}"
      POSTGRES_USER: "{{ env_postgres_user }}"
      POSTGRES_PORT: "{{ env_postgres_port }}"
      POSTGRES_PASSWORD_FILE: "{{ env_postgres_password_file }}"
      ODOO_OPT_LIMIT_TIME_CPU: "{{ env_odoo_opt_limit_time_cpu }}"
      ODOO_OPT_LIMIT_TIME_REAL: "{{ env_odoo_opt_limit_time_real }}"
      ODOO_OPT_LIMIT_TIME_REAL_CRON: "{{ env_odoo_opt_limit_time_real_cron }}"
      ODOO_OPT_LIMIT_MEMORY_SOFT: "{{ env_odoo_opt_limit_memory_soft }}"
      ODOO_OPT_LIMIT_MEMORY_HARD: "{{ env_odoo_opt_limit_memory_hard }}"
      ODOO_OPT_WORKERS: "{{ env_odoo_opt_workers }}"
      ODOO_OPT_MAX_CRON_THREADS: "{{ env_odoo_opt_max_cron_threads }}"
      ODOO_WITHOUT_DEMO: "{{ env_odoo_without_demo }}"
      ODOO_DB_NAME: "{{ inv_db_name }}"
      # ODOO_DEBUG_COMMAND: "enabled"
      MARABUNTA_MIGRATION_FILE: /opt/odoo/compose/base.yml
      # MARABUNTA_EXTRA_MIG_FILES: /opt/odoo/extra_1.yml /opt/odoo/extra_2.yml
      MARABUNTA_DATABASE: "{{ inv_db_name }}"
      MARABUNTA_DB_USER: "{{ env_postgres_user }}"
      MARABUNTA_DB_PASSWORD_FILE: "{{ env_postgres_password_file }}"
      MARABUNTA_DB_HOST: db
      MARABUNTA_FORCE_VERSION: setup
      # Mandatory envs.
      # These envs represent Odoo flag arguments, so we must pass
      # empty string for it to properly recognize it.
      ODOO_OPT_PROXY_MODE: ""
      ODOO_OPT_SAVE: ""
    networks:
      - backend
      - frontend
  db:
    image: postgres:13
    volumes:
      - odoo-db-data:/var/lib/postgresql/data
      - "{{ dpl_postgres_conf_file }}:/etc/postgresql/postgresql.conf"
      - type: bind
        source: "{{ dpl_secrets_postgres_file }}"
        target: "{{ env_postgres_password_file }}"
    environment:
      POSTGRES_DB: "{{ env_postgres_db }}"
      POSTGRES_USER: "{{ env_postgres_user }}"
      POSTGRES_PORT: "{{ env_postgres_port }}"
      POSTGRES_PASSWORD_FILE: "{{ env_postgres_password_file }}"
    networks:
      - backend
  web:
    image: focusate/nginx:latest
    ports:
      - 80:80
      - 443:443
    depends_on:
      - odoo
    volumes:
      - "{{ dpl_dpl_secrets_domain_bundle_file }}\
        :/etc/ssl/nginx/domain.bundle.crt"
      - "{{ dpl_secrets_domain_key }}:/etc/ssl/nginx/domain.key"
      - "{{ dpl_nginx_logo_file }}:/usr/share/nginx/html/maintenance_logo.png"
      - "{{ dpl_nginx_html_file }}:/usr/share/nginx/html/custom_502.html"
    networks:
      - frontend

volumes:
  odoo-db-data:
    driver: local
  odoo-filestore:
    driver: local

networks:
  backend:
  frontend:
