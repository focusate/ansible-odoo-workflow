#!/usr/bin/env python3
"""Script to change Odoo users password."""
import sys
import csv
import odoorpc
import argparse

DEFAULT_ADMIN_PASSWORD = 'admin'
USER = 'admin'
HOST = '127.0.0.1'
PORT = '8069'
PROTOCOL = 'jsonrpc'
DB = 'odoodb'


def prepare_args():
    """Prepare arguments for user password change RPC call."""
    parser = argparse.ArgumentParser(
        description="Change users password using change file."
    )
    parser.add_argument(
        'file',
        help="CSV file specifying users and their passwords to change. "
        "Expects login,password",
    )
    parser.add_argument(
        '--admin-password-file',
        help="File containing password for admin user. If not set, will "
        "attempt to use default password",
    )
    parser.add_argument(
        '--admin-user',
        default=USER,
        help="Admin user that will be used as a login to change other "
        "user passwords."
    )
    parser.add_argument(
        '--ignore-failed-login',
        action="store_true",
        help="Whether to ignore failed login instead of raising exception.",
    )
    parser.add_argument(
        '--host',
        help="Host to log in to",
        default=HOST,
    )
    parser.add_argument(
        '--port',
        help="Odoo port",
        default=PORT,
    )
    parser.add_argument(
        '--protocol',
        help="Protocol to use. Either jsonrpc or jsonrpc+ssl",
        default=PROTOCOL,
    )
    parser.add_argument(
        '-d',
        '--database',
        help="Database name to log in to",
        default=DB,
    )
    return parser.parse_args()


def login(
    user,
    password,
    host,
    port,
    protocol,
    database,
        ignore_failed_login=False):
    """Login to Odoo database and return connection object."""
    odoo = odoorpc.ODOO(host, protocol=protocol, port=port)
    try:
        odoo.login(database, user, password)
    except odoorpc.error.RPCError:
        if ignore_failed_login:
            print(f"Login for {user} failed. Password change is skipped.")
            sys.exit(0)
        raise
    return odoo


def _read_file(file):
    with open(file) as f:
        return f.read()


def _read_csv_file(file):
    with open(file, newline='') as f:
        for row in csv.DictReader(f):
            yield row


def _change_password(ResUsers, users_data):
    for user_data in users_data:
        user_ids = ResUsers.search([('login', '=', user_data['login'])])
        user = ResUsers.browse(user_ids)
        user.password = user_data['password']


if __name__ == '__main__':
    args = prepare_args()
    admin_password = DEFAULT_ADMIN_PASSWORD
    if args.admin_password_file:
        admin_password = _read_file(args.admin_password_file).strip()
    odoo = login(
        args.admin_user,
        admin_password,
        args.host,
        args.port,
        args.protocol,
        args.database,
        ignore_failed_login=args.ignore_failed_login,
    )
    ResUsers = odoo.env['res.users']
    _change_password(ResUsers, _read_csv_file(args.file))
